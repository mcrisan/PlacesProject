<?php

namespace Bundle\PlacesBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PlacePhotosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlacePhotosRepository extends EntityRepository
{
    public function getPlacePhotos($id = null, $limit = null){
        $qb = $this->createQueryBuilder('place')
                ->select('place.imgUrl');
        
        if(false === is_null($limit)) {
            $qb->setMaxResults($limit);
        }
        if(false === is_null($id)) {
            $qb->where('place.placeId = :id')
               ->setParameter('id', $id);
        }
        if(false === is_null($limit) && false === is_null($id)){
            $qb->where('place.placeId = :id')
               ->setParameter('id', $id)
               ->setMaxResults($limit);
        }
        
        return $qb->getQuery()->getResult();
    }
    
    public function checkForPhotos($id){
        $qb = $this->createQueryBuilder('place')
                ->select('place.placeId')
                ->where('place.placeId = :id')
                ->setParameter('id', $id)
                ->getQuery()
                ->getResult();
        $rows = count($qb);
        
        if($rows >= 1){
            return true;
        }else{
            return false;
        }
    }
    
    // Update photos table
    public function updatePlacePhotos($id,$photoRef,$photoUrl){
        $qb = $this->createQueryBuilder('')
                ->update('Bundle\PlacesBundle\Entity\PlacePhotos','place')
                ->set('place.imgRef', ':ref')
                ->set('place.imgUrl', ':url')
                ->where('place.placeId = :id')
                ->setParameter('ref', $photoRef)
                ->setParameter('url', $photoUrl)
                ->setParameter('id', $id);
        return $qb->getQuery();
    }
}
